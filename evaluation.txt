                        precision    recall  f1-score   support

               related       0.83      0.89      0.86      1002
               request       0.69      0.50      0.58       224
                 offer       1.00      0.00      0.00         6
           aid_related       0.71      0.63      0.67       536
          medical_help       0.66      0.33      0.44        94
      medical_products       0.62      0.25      0.36        64
     search_and_rescue       0.64      0.16      0.26        43
              security       1.00      0.00      0.00        29
              military       0.60      0.33      0.43        45
           child_alone       1.00      1.00      1.00         0
                 water       0.81      0.57      0.67        87
                  food       0.80      0.82      0.81       131
               shelter       0.80      0.59      0.68       119
              clothing       0.71      0.80      0.75        15
                 money       0.83      0.22      0.34        23
        missing_people       0.57      0.20      0.30        20
              refugees       0.57      0.26      0.36        50
                 death       0.71      0.58      0.64        62
             other_aid       0.73      0.14      0.24       157
infrastructure_related       1.00      0.00      0.00        75
             transport       0.82      0.22      0.34        65
             buildings       0.52      0.39      0.45        66
           electricity       0.56      0.17      0.26        29
                 tools       1.00      0.00      0.00        10
             hospitals       1.00      0.00      0.00        11
                 shops       1.00      0.00      0.00         4
           aid_centers       1.00      0.00      0.00        15
  other_infrastructure       1.00      0.00      0.00        54
       weather_related       0.83      0.73      0.77       364
                floods       0.92      0.56      0.69        99
                 storm       0.73      0.52      0.61       130
                  fire       1.00      0.14      0.25        14
            earthquake       0.89      0.82      0.85       119
                  cold       0.73      0.42      0.53        19
         other_weather       0.50      0.13      0.21        68
         direct_report       0.67      0.48      0.56       261

             micro avg       0.77      0.58      0.67      4110
             macro avg       0.79      0.36      0.41      4110
          weighted avg       0.77      0.58      0.63      4110
           samples avg       0.76      0.73      0.60      4110



[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 1 0]
 [1 0 1 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0]]


[[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0]]


{'cv': 5, 'error_score': nan, 'estimator__memory': None, 'estimator__steps': [('vect', CountVectorizer()), ('tf-idf', TfidfTransformer()), ('clf', MultiOutputClassifier(estimator=DecisionTreeClassifier()))], 'estimator__verbose': False, 'estimator__vect': CountVectorizer(), 'estimator__tf-idf': TfidfTransformer(), 'estimator__clf': MultiOutputClassifier(estimator=DecisionTreeClassifier()), 'estimator__vect__analyzer': 'word', 'estimator__vect__binary': False, 'estimator__vect__decode_error': 'strict', 'estimator__vect__dtype': <class 'numpy.int64'>, 'estimator__vect__encoding': 'utf-8', 'estimator__vect__input': 'content', 'estimator__vect__lowercase': True, 'estimator__vect__max_df': 1.0, 'estimator__vect__max_features': None, 'estimator__vect__min_df': 1, 'estimator__vect__ngram_range': (1, 1), 'estimator__vect__preprocessor': None, 'estimator__vect__stop_words': None, 'estimator__vect__strip_accents': None, 'estimator__vect__token_pattern': '(?u)\\b\\w\\w+\\b', 'estimator__vect__tokenizer': None, 'estimator__vect__vocabulary': None, 'estimator__tf-idf__norm': 'l2', 'estimator__tf-idf__smooth_idf': True, 'estimator__tf-idf__sublinear_tf': False, 'estimator__tf-idf__use_idf': True, 'estimator__clf__estimator__ccp_alpha': 0.0, 'estimator__clf__estimator__class_weight': None, 'estimator__clf__estimator__criterion': 'gini', 'estimator__clf__estimator__max_depth': None, 'estimator__clf__estimator__max_features': None, 'estimator__clf__estimator__max_leaf_nodes': None, 'estimator__clf__estimator__min_impurity_decrease': 0.0, 'estimator__clf__estimator__min_impurity_split': None, 'estimator__clf__estimator__min_samples_leaf': 1, 'estimator__clf__estimator__min_samples_split': 2, 'estimator__clf__estimator__min_weight_fraction_leaf': 0.0, 'estimator__clf__estimator__random_state': None, 'estimator__clf__estimator__splitter': 'best', 'estimator__clf__estimator': DecisionTreeClassifier(), 'estimator__clf__n_jobs': None, 'estimator': Pipeline(steps=[('vect', CountVectorizer()), ('tf-idf', TfidfTransformer()),
                ('clf',
                 MultiOutputClassifier(estimator=DecisionTreeClassifier()))]), 'n_jobs': None, 'param_grid': {'vect__ngram_range': [(1, 3)], 'vect__max_df': [0.9], 'vect__min_df': [1], 'vect__max_features': [None], 'clf__estimator__random_state': [0], 'clf__estimator__class_weight': [None], 'clf__estimator__splitter': ['best'], 'clf__estimator__min_samples_leaf': [36], 'clf__estimator__min_samples_split': [512]}, 'pre_dispatch': '2*n_jobs', 'refit': True, 'return_train_score': False, 'scoring': None, 'verbose': 4}


Pipeline(steps=[('vect', CountVectorizer(max_df=0.9, ngram_range=(1, 3))),
                ('tf-idf', TfidfTransformer()),
                ('clf',
                 MultiOutputClassifier(estimator=DecisionTreeClassifier(min_samples_leaf=36,
                                                                        min_samples_split=512,
                                                                        random_state=0)))])