                        precision    recall  f1-score   support

               related       0.84      0.88      0.86       984
               request       0.69      0.39      0.50       236
                 offer       1.00      0.00      0.00        10
           aid_related       0.73      0.66      0.69       550
          medical_help       0.52      0.10      0.17       106
      medical_products       0.60      0.25      0.35        60
     search_and_rescue       0.50      0.13      0.21        30
              security       1.00      0.00      0.00        24
              military       0.59      0.36      0.45        53
           child_alone       1.00      1.00      1.00         0
                 water       0.71      0.80      0.75        86
                  food       0.80      0.78      0.79       137
               shelter       0.71      0.63      0.67       112
              clothing       0.53      0.50      0.51        20
                 money       1.00      0.00      0.00        29
        missing_people       0.40      0.29      0.33         7
              refugees       0.72      0.32      0.44        57
                 death       0.75      0.60      0.67        55
             other_aid       0.57      0.14      0.22       174
infrastructure_related       1.00      0.00      0.00        83
             transport       0.56      0.27      0.37        55
             buildings       0.79      0.36      0.50        72
           electricity       0.47      0.25      0.33        32
                 tools       1.00      0.00      0.00         7
             hospitals       1.00      0.00      0.00        11
                 shops       1.00      0.00      0.00         7
           aid_centers       0.00      0.00      0.00        16
  other_infrastructure       1.00      0.00      0.00        56
       weather_related       0.82      0.81      0.81       361
                floods       0.91      0.62      0.74       102
                 storm       0.73      0.67      0.70       126
                  fire       1.00      0.00      0.00         9
            earthquake       0.86      0.88      0.87       128
                  cold       0.58      0.26      0.36        27
         other_weather       0.67      0.19      0.29        75
         direct_report       0.60      0.38      0.47       257

             micro avg       0.77      0.58      0.66      4154
             macro avg       0.74      0.35      0.39      4154
          weighted avg       0.75      0.58      0.62      4154
           samples avg       0.77      0.73      0.60      4154



Labels:
[[1 0 0 1 1 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0]
 [1 0 0 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0]
 [1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]


Prediction:
[[1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0]
 [1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0]
 [1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]


{'cv': 5, 'error_score': nan, 'estimator__memory': None, 'estimator__steps': [('vect', CountVectorizer()), ('tf-idf', TfidfTransformer()), ('clf', MultiOutputClassifier(estimator=DecisionTreeClassifier()))], 'estimator__verbose': False, 'estimator__vect': CountVectorizer(), 'estimator__tf-idf': TfidfTransformer(), 'estimator__clf': MultiOutputClassifier(estimator=DecisionTreeClassifier()), 'estimator__vect__analyzer': 'word', 'estimator__vect__binary': False, 'estimator__vect__decode_error': 'strict', 'estimator__vect__dtype': <class 'numpy.int64'>, 'estimator__vect__encoding': 'utf-8', 'estimator__vect__input': 'content', 'estimator__vect__lowercase': True, 'estimator__vect__max_df': 1.0, 'estimator__vect__max_features': None, 'estimator__vect__min_df': 1, 'estimator__vect__ngram_range': (1, 1), 'estimator__vect__preprocessor': None, 'estimator__vect__stop_words': None, 'estimator__vect__strip_accents': None, 'estimator__vect__token_pattern': '(?u)\\b\\w\\w+\\b', 'estimator__vect__tokenizer': None, 'estimator__vect__vocabulary': None, 'estimator__tf-idf__norm': 'l2', 'estimator__tf-idf__smooth_idf': True, 'estimator__tf-idf__sublinear_tf': False, 'estimator__tf-idf__use_idf': True, 'estimator__clf__estimator__ccp_alpha': 0.0, 'estimator__clf__estimator__class_weight': None, 'estimator__clf__estimator__criterion': 'gini', 'estimator__clf__estimator__max_depth': None, 'estimator__clf__estimator__max_features': None, 'estimator__clf__estimator__max_leaf_nodes': None, 'estimator__clf__estimator__min_impurity_decrease': 0.0, 'estimator__clf__estimator__min_impurity_split': None, 'estimator__clf__estimator__min_samples_leaf': 1, 'estimator__clf__estimator__min_samples_split': 2, 'estimator__clf__estimator__min_weight_fraction_leaf': 0.0, 'estimator__clf__estimator__random_state': None, 'estimator__clf__estimator__splitter': 'best', 'estimator__clf__estimator': DecisionTreeClassifier(), 'estimator__clf__n_jobs': None, 'estimator': Pipeline(steps=[('vect', CountVectorizer()), ('tf-idf', TfidfTransformer()),
                ('clf',
                 MultiOutputClassifier(estimator=DecisionTreeClassifier()))]), 'n_jobs': -1, 'param_grid': {'vect__tokenizer': [<function tokenize at 0x000001C929C323A0>], 'vect__ngram_range': [(1, 2)], 'vect__max_df': [0.75, 0.9, 1.0], 'vect__min_df': [0.001, 1], 'vect__max_features': [None], 'clf__estimator__random_state': [0], 'clf__estimator__class_weight': [None], 'clf__estimator__splitter': ['best', 'random'], 'clf__estimator__min_samples_leaf': [36, 64], 'clf__estimator__min_samples_split': [256, 512, 768, 1024]}, 'pre_dispatch': '2*n_jobs', 'refit': True, 'return_train_score': False, 'scoring': None, 'verbose': 3}


Pipeline(steps=[('vect',
                 CountVectorizer(max_df=0.75, ngram_range=(1, 2),
                                 tokenizer=<function tokenize at 0x000001C929C323A0>)),
                ('tf-idf', TfidfTransformer()),
                ('clf',
                 MultiOutputClassifier(estimator=DecisionTreeClassifier(min_samples_leaf=36,
                                                                        min_samples_split=512,
                                                                        random_state=0)))])