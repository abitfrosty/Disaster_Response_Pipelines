                        precision    recall  f1-score   support

               related       0.83      0.91      0.87      1000
               request       0.69      0.44      0.54       222
                 offer       1.00      0.00      0.00        13
           aid_related       0.70      0.60      0.64       551
          medical_help       0.48      0.25      0.33       105
      medical_products       0.79      0.39      0.52        57
     search_and_rescue       0.71      0.27      0.39        37
              security       1.00      0.00      0.00        19
              military       0.69      0.40      0.51        50
           child_alone       1.00      1.00      1.00         0
                 water       0.73      0.61      0.67        80
                  food       0.77      0.74      0.75       142
               shelter       0.82      0.66      0.73       108
              clothing       0.83      0.75      0.79        20
                 money       0.33      0.08      0.13        38
        missing_people       0.83      0.24      0.37        21
              refugees       0.61      0.39      0.47        44
                 death       0.80      0.56      0.66        70
             other_aid       0.47      0.17      0.25       164
infrastructure_related       1.00      0.02      0.05        84
             transport       0.77      0.15      0.26        65
             buildings       0.39      0.16      0.22        58
           electricity       0.48      0.41      0.44        27
                 tools       1.00      0.00      0.00         7
             hospitals       1.00      0.00      0.00        15
                 shops       1.00      0.00      0.00         6
           aid_centers       1.00      0.00      0.00        15
  other_infrastructure       1.00      0.00      0.00        58
       weather_related       0.83      0.71      0.77       359
                floods       0.84      0.49      0.62       100
                 storm       0.67      0.67      0.67       111
                  fire       0.75      0.40      0.52        15
            earthquake       0.90      0.83      0.86       134
                  cold       0.67      0.45      0.54        22
         other_weather       0.67      0.13      0.22        76
         direct_report       0.60      0.43      0.50       234

             micro avg       0.76      0.58      0.66      4127
             macro avg       0.77      0.37      0.42      4127
          weighted avg       0.75      0.58      0.62      4127
           samples avg       0.74      0.74      0.60      4127



Labels:
[[1 1 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]


Prediction:
[[1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]


{'cv': 5, 'error_score': nan, 'estimator__memory': None, 'estimator__steps': [('vect', CountVectorizer()), ('tf-idf', TfidfTransformer()), ('clf', MultiOutputClassifier(estimator=DecisionTreeClassifier()))], 'estimator__verbose': False, 'estimator__vect': CountVectorizer(), 'estimator__tf-idf': TfidfTransformer(), 'estimator__clf': MultiOutputClassifier(estimator=DecisionTreeClassifier()), 'estimator__vect__analyzer': 'word', 'estimator__vect__binary': False, 'estimator__vect__decode_error': 'strict', 'estimator__vect__dtype': <class 'numpy.int64'>, 'estimator__vect__encoding': 'utf-8', 'estimator__vect__input': 'content', 'estimator__vect__lowercase': True, 'estimator__vect__max_df': 1.0, 'estimator__vect__max_features': None, 'estimator__vect__min_df': 1, 'estimator__vect__ngram_range': (1, 1), 'estimator__vect__preprocessor': None, 'estimator__vect__stop_words': None, 'estimator__vect__strip_accents': None, 'estimator__vect__token_pattern': '(?u)\\b\\w\\w+\\b', 'estimator__vect__tokenizer': None, 'estimator__vect__vocabulary': None, 'estimator__tf-idf__norm': 'l2', 'estimator__tf-idf__smooth_idf': True, 'estimator__tf-idf__sublinear_tf': False, 'estimator__tf-idf__use_idf': True, 'estimator__clf__estimator__ccp_alpha': 0.0, 'estimator__clf__estimator__class_weight': None, 'estimator__clf__estimator__criterion': 'gini', 'estimator__clf__estimator__max_depth': None, 'estimator__clf__estimator__max_features': None, 'estimator__clf__estimator__max_leaf_nodes': None, 'estimator__clf__estimator__min_impurity_decrease': 0.0, 'estimator__clf__estimator__min_impurity_split': None, 'estimator__clf__estimator__min_samples_leaf': 1, 'estimator__clf__estimator__min_samples_split': 2, 'estimator__clf__estimator__min_weight_fraction_leaf': 0.0, 'estimator__clf__estimator__random_state': None, 'estimator__clf__estimator__splitter': 'best', 'estimator__clf__estimator': DecisionTreeClassifier(), 'estimator__clf__n_jobs': None, 'estimator': Pipeline(steps=[('vect', CountVectorizer()), ('tf-idf', TfidfTransformer()),
                ('clf',
                 MultiOutputClassifier(estimator=DecisionTreeClassifier()))]), 'n_jobs': None, 'param_grid': {'vect__ngram_range': [(1, 2)], 'vect__max_df': [0.75, 0.9, 1.0], 'vect__min_df': [0.001, 1], 'vect__max_features': [None], 'clf__estimator__random_state': [0], 'clf__estimator__class_weight': [None], 'clf__estimator__splitter': ['best', 'random'], 'clf__estimator__min_samples_leaf': [36, 64], 'clf__estimator__min_samples_split': [256, 512, 768, 1024]}, 'pre_dispatch': '2*n_jobs', 'refit': True, 'return_train_score': False, 'scoring': None, 'verbose': 3}


Pipeline(steps=[('vect', CountVectorizer(max_df=0.75, ngram_range=(1, 2))),
                ('tf-idf', TfidfTransformer()),
                ('clf',
                 MultiOutputClassifier(estimator=DecisionTreeClassifier(min_samples_leaf=36,
                                                                        min_samples_split=256,
                                                                        random_state=0)))])